****************************************************************************;
* Program Name    : Coop Food to Go Projection.sas
* Path            : 
* Client          : Co-Operative Group
* Project         : 
* Description     : 
*                       
*                       
* Analyst         : Andreas Demetri
* Date            : 29th Mar
*
* Amended by      : 
* Amendments      : 
****************************************************************************;
/*%include "E:\SASMacros\Autoexec\autoexec2.sas";*/



* Redirecting log and output ;
* Rerun latest post codes inclusion file ;
%include "\\crd01fil01.cl.local\LDrive\Analytics\Coop\Targeting\20191008\CoOperativeFoodPostCodeFile.sas";



* Defining date boundaries ;
proc sql;
connect to odbc (datasrc = CDWMain);
	
SELECT 
	"'"||compress(latest_week)||"'"	AS latest_week
	,"'"||compress(lb_4wks)||"'"	AS lb_4wks
	,"'"||compress(lb_6wks)||"'"	AS lb_6wks
	,"'"||compress(lb_7wks)||"'"	AS lb_7wks
	,"'"||compress(lb_8wks)||"'"	AS lb_8wks
	,"'"||compress(lb_9wks)||"'"	AS lb_9wks	
	,"'"||compress(lb_12wks)||"'"	AS lb_12wks	
	,"'"||compress(lb_16wks)||"'"	AS lb_16wks
	,"'"||compress(lb_17wks)||"'"	AS lb_17wks
	,"'"||compress(lb_26wks)||"'"	AS lb_26wks
into :latest_week
	,:lb_4wks
	,:lb_6wks
	,:lb_7wks
	,:lb_8wks
	,:lb_9wks
	,:lb_12wks
	,:lb_16wks
	,:lb_17wks
	,:lb_26wks

FROM connection to odbc
(

SELECT

	 &lw_ftm_sql.					  				AS latest_week
	 , CAST(DATEADD(week,-03,&lw_ftm_sql.) AS DATE) AS lb_4wks
	 , CAST(DATEADD(week,-05,&lw_ftm_sql.) AS DATE) AS lb_6wks
	 , CAST(DATEADD(week,-06,&lw_ftm_sql.) AS DATE) AS lb_7wks
	 , CAST(DATEADD(week,-07,&lw_ftm_sql.) AS DATE) AS lb_8wks
	 , CAST(DATEADD(week,-08,&lw_ftm_sql.) AS DATE) AS lb_9wks	
	 , CAST(DATEADD(week,-11,&lw_ftm_sql.) AS DATE) AS lb_12wks	
	 , CAST(DATEADD(week,-15,&lw_ftm_sql.) AS DATE) AS lb_16wks
	 , CAST(DATEADD(week,-16,&lw_ftm_sql.) AS DATE) AS lb_17wks
	 , CAST(DATEADD(week,-25,&lw_ftm_sql.) AS DATE) AS lb_26wks

);
disconnect FROM odbc;
quit;

* Identifying segmentids ;
* Co-op Food Societies;

* I can't be bothered to deal with findmerchants post masterbrand changes;

/* 

%findmerchants(
	name = 
		Co-operative Food (East Of England)
		~ %nrstr(Co-operative Food%Central England)
		~ Co-operative Food (Southern) 
		~ Co-operative Food (East Of England) (UK)
		~ Co-operative Food (Scotmid) 
		~ Co-operative Food (Other Societies) (UK) 
		~ Co-op Food (Other Societies) 
		~ Co-operative Food (Other) (UK+INTL)
	, outset = coop_society	
	, list_name = coop_society
	);	

* Excluded merchant names ;


%findmerchants(
	name = 
		Co-operative Food + Texaco (UK)
		| Co-operative Food (Petrol)
		| Co-operative Food (Travel) 
		| Co-operative Food (Unknown Society) 
		| Co-operative Food (Petrol) (Closed Locations) 
		| Co-operative Electrical 
		| Co-operative Energy 
		| Co-operative Funeral

	, outset = excl	
	, list_name = excl
	);	

*Co-op Food Group;

%findmerchants(
	  name = %nrstr(co%operative food)
	, outset = coop_group
	, list_name = coop_group
	, exc = &coop_society. &excl.
	);

*/
* Grocery Category ;
%findmerchants(
	level = CATEGORY 
	, name = grocery
	, outset = _grocery
	, list_name = grocery
);



/*%findmerchants(*/
/*	  name = CET*/
/*	, outset = _cet*/
/*	, list_name = cet);*/

*%let coop_society = 4046,4044,4045,4225,2800,3097,302,3823,2799; * old list;
%let coop_society =302,2800,2799,3097,3823,4225,6133,4046,6233;
%let coop_group = 3729;
*%let coop_group = 3729,4162; * Old list;

**** DATA PULL ****;


proc sql; 
connect to odbc (datasrc = CDWMain) ; 

* CET ;

/*CREATE TABLE CET AS */
/*SELECT * */
/*FROM connection to odbc */
/*(*/
/*	SELECT DISTINCT */
/*		institutionid*/
/*		, customerid*/
/*	FROM iwagg.dbo.AG_CustomerMerchant_AllCustomers*/
/*	WHERE*/
/*		InstitutionID IN (2,118)*/
/*		AND SegmentID IN (&cet2.)*/
/*) ; */

* Co-op Group ; 

CREATE TABLE ProjDataGro AS
SELECT * 
FROM connection to odbc 
(
	SELECT
		institutionid
		,customerid 

		,max(weekstartdate) AS maxwsd 
		,SUM(CASE WHEN weekstartdate BETWEEN &lb_4wks. AND &latest_week. THEN amount ELSE 0 END) AS RecentSp0_4w
		,SUM(CASE WHEN weekstartdate BETWEEN &lb_6wks. AND &latest_week. THEN amount ELSE 0 END) AS RecentSp0_6w
		,SUM(CASE WHEN weekstartdate BETWEEN &lb_8wks. AND &latest_week. THEN amount ELSE 0 END) AS RecentSp0_8w 
		,SUM(CASE WHEN weekstartdate BETWEEN &lb_16wks. AND &lb_9wks. THEN amount ELSE 0 END) AS RecentSp9_16w   /*PriorSp*/
		,SUM(CASE WHEN weekstartdate BETWEEN &lb_26wks. AND &lb_17wks. THEN amount ELSE 0 END) AS RecentSp17_26w /*PriorSp6w*/

	FROM iwagg.dbo.FT_Merchant 

	WHERE
		weekstartdate between &lb_26wks. AND &latest_week.
		AND segmentid in (&coop_group.) 
		AND institutionid in (2,118) 

	GROUP BY
		institutionid
		,customerid 

) ;

* Co-op Society ;

CREATE TABLE ProjDataSoc AS 
SELECT * 
FROM connection to odbc 
(

	SELECT 
		institutionid
		,customerid 
		,max(weekstartdate) as maxwsd 


	FROM iwagg.dbo.ft_merchant 

	where 
		weekstartdate between &lb_26wks. and &latest_week.
		and segmentid in (&coop_society.) 
		and institutionid in (2,118) 

	GROUP BY
		institutionid
		,customerid 

	) ;

* Grocery Category;

CREATE TABLE ProjDataCat AS 
SELECT * 
FROM connection to odbc 
	(


	SELECT 
		institutionid
		,customerid 

		,max(weekstartdate) as maxwsd 
		,SUM(CASE WHEN weekstartdate between &lb_6wks. and &latest_week. then amount else 0 end) as RecentSp0_6w
		,SUM(CASE WHEN weekstartdate between &lb_8wks. and &latest_week. then amount else 0 end) as RecentSp0_8w
		,SUM(CASE WHEN weekstartdate between &lb_16wks. and &lb_9wks. then amount else 0 end) as RecentSp9_16w /*PriorSp*/
		,SUM(CASE WHEN weekstartdate between &lb_12wks. and &lb_7wks. then amount else 0 end) as RecentSp7_12w /*PriorSp6w*/


	FROM iwagg.dbo.ft_merchant 

	where 
		weekstartdate between &lb_26wks. and &latest_week.
		and segmentid in (&grocery2.) 
		and institutionid in (2,118) 

	GROUP BY
		institutionid
		,customerid 

	) ;

* Postal Code ;

* Housekeeping; 
DROP TABLE analysis.ss_coop_postcodes ;

* Exporting postalcds to SQL ;
CREATE TABLE analysis.ss_coop_postcodes AS 
SELECT *
FROM pcdata.co_op_ps_inc_file
;


CREATE TABLE customers AS 
SELECT * 
FROM connection to odbc 
(
	SELECT 
		institutionid
		, customerid 
	FROM bi.dbo.vdm_customer a 
	INNER JOIN analysis.dbo.ss_coop_postcodes b 
	ON a.postalcd = b.postalcd
) ; 
quit;
* Hulk Smash ;

proc sql;
connect to odbc (datasrc = cdwmain);
create table members as select * from connection to odbc(

select
	institutionid
	,customerid
from
	analysis.temp.coop_experian_match_all202003
where
	customerid <> 0
group by
	institutionid
	,customerid;
);
disconnect from odbc;
quit;

proc sql;
create table smash as 
SELECT 
	a.institutionid 
	,a.customerid 

	,b.maxwsd as G_maxwsd 
	,b.RecentSp0_8w as G_Rec0_8w
	,b.RecentSp0_4w AS G_Rec0_4w
	,b.RecentSp9_16w as G_Pre9_16w
	,b.RecentSp0_6w AS G_Rec0_6w

	,c.maxwsd as S_maxwsd 

	,d.maxwsd as C_maxwsd 
	,d.RecentSp0_8w as C_Rec0_8w
	,d.RecentSp9_16w as C_pre9_16w
	,d.RecentSp0_6w AS C_Rec0_6w
	,d.RecentSp7_12w AS C_Pre7_12w

/*	,(f.customerid > 0) AS cet*/

	,(g.customerid > 0) as InGeo

	,(dm.customerid > 0) as IsMember

FROM 
	(SELECT institutionid, customerid 
	FROM projdatagro
	UNION 
	SELECT institutionid, customerid 
	FROM projdatasoc 
	UNION 
	SELECT institutionid, customerid 
	FROM projdatacat 
/*	UNION*/
/*	SELECT institutionid, customerid*/
/*	FROM cet*/
	UNION 
	SELECT institutionid, customerid
	FROM customers 
	) as a 

left join projdatagro as b
on a.institutionid = b.institutionid and a.customerid = b.customerid 

left join projdatasoc as c 
on a.institutionid = c.institutionid and a.customerid = c.customerid 

left join projdatacat as d 
on a.institutionid = d.institutionid and a.customerid = d.customerid 

/*left join cet as f */
/*on a.institutionid = f.institutionid and a.customerid = f.customerid */

left join customers as g
on a.institutionid = g.institutionid and a.customerid = g.customerid 

left join members as dm 
on a.institutionid = dm.institutionid and a.customerid = dm.customerid 
;



quit; 


* Categorising customers;

data smash2b ;
length Seg $50; 
set smash ; 

SOW = 0;
SOW_Pre = 0;
SOW_dec = 0;
* Assigning CET into last segment in the hierarchy ;
/*if cet = 1 then do;*/
/*	Seg = 'A-Lapsing 75p SOW decline-NonMember';*/
/*	InGeo = 1;*/
/*	S_maxwsd = "";*/
/*end;*/
* Applying segmentation ;

/*else*/
if G_Rec0_8w > 0 then do ; 
	
	if C_Rec0_8w > 0 then SOW = G_Rec0_8w / C_Rec0_8w  ; else SOW = 1;
    if C_pre9_16w > 0 then SOW_Pre = G_pre9_16w / C_pre9_16w ; else SOW_Pre = 1; 

	if SOW_Pre > 0 then SOW_dec = (SOW / SOW_Pre)-1 ; 	/* '-1 to 0 Decline'  /  '0 to 1 Increase' */
	else if SOW_pre = 0 and SOW > 0 then SOW_dec = 0;
	else SOW_dec = 1;
	end;

if  IsMember =1 then do;
/* SOW Decline*/
	if SOW_dec < -0.75 then Seg='X-Lapsing 75p SOW dec-Member';
	else if SOW_dec < -0.5  then Seg='X-Lapsing 50p-75p SOW dec-Member';
/*Spend Decline*/
	else if  G_Rec0_8w>0 and G_Pre9_16w>0 and G_Rec0_8w <= G_Pre9_16w*0.5  then Seg='X-Lapsing 50p spend dec-Member';
	else if  G_Rec0_8w>0 and G_Pre9_16w>0 and G_Rec0_8w < G_Pre9_16w*0.75  then Seg='X-Lapsing 25p-50p spend dec-Member';
/*Short Term Lapsed*/
	else if G_maxwsd >= &lb_8wks. AND G_maxwsd <= &lb_4wks. then seg='E-Short-term lapsed';
/*Last shop 4-8 weeks with group*/
	else if G_maxwsd >= &lb_16wks. AND G_maxwsd <= &lb_9wks. then seg='F-Hot Lapsed';
	else if G_maxwsd >= &lb_26wks. AND G_maxwsd <= &lb_17wks. then seg='G-Cold Lapsed';
/*SOW*/
	else if C_maxwsd >= &lb_8wks. and SOW >0 and SOW < 0.05 then Seg='X-Existing 5p SOW-Member';
	else if C_maxwsd >= &lb_8wks. and SOW >0 and  SOW < 0.15 then Seg='X-Existing 5-15p SOW-Member';
	else if C_maxwsd >= &lb_8wks. and SOW >0 and  SOW < 0.35 then Seg='X-Existing 15-35p SOW-Member';
	else if C_maxwsd >= &lb_8wks. and SOW >0 and  SOW <= 1 then Seg='X-Existing 35p SOW-Member';
/* Competitotrs */
	else if C_maxwsd >= &lb_26wks. AND C_maxwsd <= &latest_week. then seg='X-Acquisition Total Co-op-Member';
	else seg='xx - Member';
end;
	else do;

 /* Non Members */

/* SOW Decline*/
	if SOW_dec < -0.75 then Seg='D-Lapsing 75p SOW decline-NonMember';
	else if SOW_dec < -0.5  then Seg='X-Lapsing 50p-75p SOW dec-NonMember';
/*Spend Decline*/
	else if  G_Rec0_8w>0 and G_Pre9_16w>0 and G_Rec0_8w <= G_Pre9_16w*0.5  then Seg='X-Lapsing 50p spend dec-NonMember';
	else if  G_Rec0_8w>0 and G_Pre9_16w>0 and G_Rec0_8w < G_Pre9_16w*0.75  then Seg='X-Lapsing 25-50p spend dec-NonMember';
/*Short Term Lapsed*/
	else if G_maxwsd >= &lb_8wks. AND G_maxwsd <= &lb_4wks. then seg='E-Short-term lapsed';
/*Last shop 4-8 weeks with group*/
	else if G_maxwsd >= &lb_16wks. AND G_maxwsd <= &lb_9wks. then seg='F-Hot Lapsed';
	else if G_maxwsd >= &lb_26wks. AND G_maxwsd <= &lb_17wks. then seg='G-Cold Lapsed';
/*SOW*/
	else if C_maxwsd >= &lb_8wks. and SOW >0 and SOW < 0.05 then Seg='X-Existing 5p SOW-NonMember';
	else if C_maxwsd >= &lb_8wks. and SOW >0 and  SOW < 0.15 then Seg='X-Existing 5-15p SOW-NonMember';
	else if C_maxwsd >= &lb_8wks. and SOW >0 and  SOW < 0.35 then Seg='X-Existing 15-35p SOW-NonMember';
	else if C_maxwsd >= &lb_8wks. and SOW >0 and  SOW < 0.5 then Seg='A-Existing 35-50p SOW-NonMember';
	else if C_maxwsd >= &lb_8wks. and SOW >0 and  SOW < 0.75 then Seg='B-Existing 50-75p SOW-NonMember';
	else if C_maxwsd >= &lb_8wks. and SOW >0 and  SOW <= 1 then Seg='C-Existing 100p SOW-NonMember';
/* Competitotrs */
	else if C_maxwsd >= &lb_26wks. AND C_maxwsd <= &latest_week. then seg='H-Acquisition Total Co-op-NonMember';
	else seg='xx - Member';
end;

/** Checking recent society spend ;*/
if S_maxwsd >= &lb_26wks. and substr(seg,1,1) in ('H') then Seg = 'Z_Acquisition_Coop_Group';
if S_maxwsd >= &lb_8wks. and substr(seg,1,1) in ('A','B','C','D','E','F','G') then Seg = 'X_Recent_Coop_Society';

run ; 


proc sql;
select seg,count(customerid) as counts from smash2b group by seg;
quit;


* Frequency counts - redundant language Ayooooo ;

proc summary data = smash2b nway;
	class Seg InstitutionID InGeo;
	output out = counts (drop = _type_ rename = (_freq_ = vol));
run;
 
* Selecting customers for targeting files ;

data smash4;
	set smash2b (where = (InGeo = 1 AND substr(seg,1,1) IN ('A','B','C','D','E','F','G','H')));
run;

proc sql;
select seg, count(*)
from smash4
group by seg;
quit;


* Creating files ;

%targeting_export_supreme(
	tes_dset = smash4
	, tes_mname =  Coop
	, tes_seg_name = Seg
	, tes_outloc = E:\KChatzivasileiou
);

* end;

%exist_cust_check(ecc_dir =E:\KChatzivasileiou, ecc_merch = coop,ecc_date = 20200805,ecc_exist_segids =3729 
,ecc_lb = 25, ecc_en = &lw_ftm_sql.,ecc_housekeeping = 1 );

